4
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 0
3 9 1 15 14 11 4 6 13 0 10 12 2 7 8 5
0 2 3 4 1 5 7 8 10 6 11 12 9 13 14 15
1 2 3 4 5 6 7 8 9 10 11 12 15 13 14 0




@Override
    public boolean equals(Object obj) {
        Node check = (Node) obj;

        for(int i=0;i<BOARD_SIZE;i++){
            for(int j=0;j<BOARD_SIZE;j++){
                if(this.grid[i][j] != check.grid[i][j]){
                    return false;
                }
            }
        }
        return true;
    }

    @Override
    public int hashCode() {
        return Arrays.hashCode(grid);
    }


    @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (!(o instanceof Node)) return false;
            Node node = (Node) o;
            return Arrays.equals(grid, node.grid);
        }

        @Override
        public int hashCode() {
            return Arrays.hashCode(grid);
        }